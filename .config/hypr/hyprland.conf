# Hyprland -- Wayland Compositor
# by DesktopCoder1407

# Backends
env = GDK_BACKEND,wayland,x11,*
env = QT_QPA_PLATFORM,wayland;xcb
env = ELECTRON_OZONE_PLATFORM_HINT,wayland

# XDG Variables
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# Theme
#env = GTK_THEME,xxx
#env = XCURSOR_THEME,Dracula-cursors
#env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,gtk3
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1

# Monitors
monitor = eDP-1, 1920x10800@60, auto, 1  # Laptop
monitor = DP-1, 2560x1440@144, 0x0, 1  # Desktop
#monitor = HDMI-A-2, 2560x1440@144, -2560x0, 1, vrr, 0  # Desktop - Secondary
monitor = , highrr, auto-left, 1  # All other monitors to the left; highest refresh rate.

# Startup Applications and Scripts
#exec-once = hypridle     # Idle Daemon
exec-once = swww-daemon  # Wallpaper Daemon
exec-once = waybar       # Taskbar
exec-once = swaync       # Notification Daemon

# Menus and Apps
$mainMod = SUPER
$terminal = alacritty
$music = alacritty --class "Popup" -e cmus
$files = pcmanfm-qt
$menu = rofi
$appMenu = rofi -show drun
$passMenu = rofi -show bitwarden
$wallMenu = ~/.config/rofi/scripts/wallpaper.sh

# Shortcuts
bind = $mainMod, RETURN, exec, $terminal
bind = SUPER, SUPER_L, exec, pkill $menu || $appMenu
bind = $mainMod SHIFT, B, exec, pkill waybar; waybar
bind = $mainMod, P, exec, $passMenu
bind = $mainMod, W, exec, $wallMenu
bind = $mainMod, M, exec, $music

# Screenshot
bind = , Print, exec, grim -g "$(slurp -o)" - | wl-copy
bind = SHIFT, Print, exec, grim -g "$(slurp)" - | wl-copy

# Function Keys
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume -l 0 @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioPlay, exec, playerctl play-pause
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioNext, exec, playerctl next
bindel = ,XF86AudioPrev, exec, playerctl previous
bindel = ,XF86MonBrightnessUp, exec, brightnessctl set +10%
bindel = ,XF86MonBrightnessDown, exec, brightnessctl set 10%-

# Window Modifications
bind = $mainMod, F, togglefloating
bind = $mainMod, G, togglegroup
bind = , F11, fullscreen
bindm = $mainMod, mouse:272, movewindow  # LMB_Drag
bindm = $mainMod, mouse:273, resizewindow  # RMB_Drag

# Exit & Locking
bind = ALT, Q, killactive,
bind = ALT SHIFT, Q, exit,
bind = $mainMod, L, exec, loginctl lock-session
bindl = , switch:Lid Switch, exec, loginctl lock-session

# Workspaces
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, grave, togglespecialworkspace, special
bind = $mainMod, bracketright, workspace, r+1
bind = $mainMod, bracketleft, workspace, r-1

bind = SUPER, TAB, cyclenext
bind = ALT, TAB, workspace, m-1

bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, grave, movetoworkspace, special
bind = $mainMod SHIFT, bracketright, movetoworkspace, r+1
bind = $mainMod SHIFT, bracketleft, movetoworkspace, r-1

# Smart gaps
workspace = w[tv1], gapsout:0, gapsin:0
workspace = f[1], gapsout:0, gapsin:0
windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
windowrule = rounding 0, floating:0, onworkspace:w[tv1]
windowrule = bordersize 0, floating:0, onworkspace:f[1]
windowrule = rounding 0, floating:0, onworkspace:f[1]

# Better Floating
windowrule = float, class:xdg-desktop-portal-gtk
windowrule = float, class:pcmanfm, title:.*[Ff]ile$
windowrule = float, title:^Select.*

# Godot
windowrule = tile, class:^(Godot)$, title:^(Godot)$
windowrule = center, class:^(Godot)$, title:^Create.*, floating:1

# Steam
windowrule = float, class:^[Ss]team$, title:negative:^Steam$
windowrule = float, class:^Paradox Launcher$
#windowrule = workspace emptynm, class:^gamescope$
#windowrule = workspace emptynm, class:^steam_app.*
#windowrule = immediate, class:^gamescope$
#windowrule = immediate, class:^steam_app.*
windowrule = content game, class:^gamescope$
windowrule = content game, class:^steam_app.*

# Custom Popups
windowrule = float, class:^(Popup)$
windowrule = float, class:^(blueman-manager)$

## Permissions
permission = /usr/bin/grim, screencopy, allow

## Variables
general {
	border_size = 2

	gaps_in = 1
	gaps_out = 4

	col.inactive_border = rgba(3B3B3BFF)
	col.active_border = rgba(E76219FF)
	col.nogroup_border = rgba(3B3B3BFF)
	col.nogroup_border_active = rgba(E76219FF)

	# allow_tearing = true Testing - I think this breaks some things.

	snap:enabled = true
}

decoration {
	rounding = 8

	blur {
		enabled = true
		size = 3
		passes = 2

		special = true
	}

	shadow:enabled = false
}

animations {
	enabled = false
}

input {
	follow_mouse = 2

	touchpad:natural_scroll = true
}

gestures {
	workspace_swipe = true
}

group {
	drag_into_group = 2

	col.border_active = rgba(E76219FF)
	col.border_inactive = rgba(3B3B3BFF)
	col.border_locked_active = rgba(E76219FF)
	col.border_locked_inactive = rgba(3B3B3BFF)

	groupbar {
		indicator_height = 4

		render_titles = false

		rounding = 1
		round_only_edges = false

		col.active = rgba(E7621999)
		col.inactive = rgba(3B3B3B99)
		col.locked_active = rgba(E7621999)
		col.locked_inactive = rgba(3B3B3B99)

		gaps_in = 4
		gaps_out = 6
		keep_upper_gap = false
	}
}

misc {
	disable_hyprland_logo = true
	disable_splash_rendering = true

	mouse_move_enables_dpms = true
	key_press_enables_dpms = true

	#disable_autoreload = true  # Set when finished

	enable_swallow = true
	swallow_regex = ^(a|A)lacritty$

	#focus_on_activate = true  # Testing

	allow_session_lock_restore = true

	initial_workspace_tracking = 2
}

binds {
	hide_special_on_workspace_change = true
	allow_workspace_cycles = true
	workspace_center_on = 1

	movefocus_cycles_groupfirst = true
}

ecosystem {
	no_update_news = true
	no_donation_nag = true
	enforce_permissions = true
}

dwindle {
	special_scale_factor = 0.95
}
